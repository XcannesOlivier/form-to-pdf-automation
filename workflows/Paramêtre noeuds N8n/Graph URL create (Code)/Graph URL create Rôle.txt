üîµ Graph URL create

R√¥le


Ce n≈ìud Code (JavaScript) en mode Run Once for All Items g√©n√®re automatiquement 
les URLs QuickChart pour produire diff√©rents graphiques √† partir des placeholders fusionn√©s :

 . Graphiques comparatifs (barres : utilisateur vs moyenne).

 . Progress bars (pourcentage de r√©ussite par session).

 . Radar global (vue d‚Äôensemble des comp√©tences par domaine).

Les URLs sont ensuite utilis√©es dans Google Slides/Docs pour ins√©rer des graphiques dynamiques dans le rapport PDF.




√âtapes principales du script


1) Donn√©es d‚Äôentr√©e

----------------------------------------
const report = $json.placeholders || {};
----------------------------------------

 . R√©cup√®re tous les placeholders d√©j√† fusionn√©s dans Merge Placeholders (individuels + moyennes).

 . Exemple attendu :

    . S1_SUB1_PCT = "55%"

    . S1_SUB1_AVG = "81%"

    . S1_PCT = "59%"




2) Palette de couleurs

-------------------------------------------
const colors = {
  S1: "rgba(75,192,192,1)",   // vert
  S2: "rgba(255,99,132,1)",   // rouge
  S3: "rgba(255,159,64,1)",   // orange
  S4: "rgba(54,162,235,1)",   // bleu
};
-------------------------------------------

 . Chaque session a une couleur unique pour la coh√©rence visuelle.




3) Fonctions de g√©n√©ration de graphiques

 . Barres comparatives (user vs moyenne)

---------------------------------------------------------------------------------------
function compareUrl(sectionId, labels, valuesUser, valuesAvg, colorUser) {
  return `https://quickchart.io/chart?c=${encodeURIComponent(JSON.stringify({
    type: 'bar',
    data: { labels, datasets: [
      { label: 'Vos r√©sultats', data: valuesUser, backgroundColor: colorUser },
      { label: 'Moyenne', data: valuesAvg, backgroundColor: 'rgba(128,128,128,0.7)' }
    ]}
  }))}`;
}
----------------------------------------------------------------------------------------


 . Radar global

-----------------------------------------
function radarUrl(labels, values) { ... }
-----------------------------------------

‚Üí Affiche les 4 grandes comp√©tences sous forme de toile d‚Äôaraign√©e.

 . Progress bar (par session)

---------------------------------------------------
function progressUrl(sessionId, pct, color) { ... }
---------------------------------------------------

‚Üí Barre horizontale unique avec un pourcentage clair (utile pour les slides).





4) Boucle par session (S1 ‚Üí S4)

---------------------------------------------------------------------
for (let i = 1; i <= 4; i++) {
  const key = `S${i}`;
  const labels = sectionLabels[key];        // titres des sous-th√®mes
  const valuesUser = [...];                 // % utilisateur
  const valuesAvg = [...];                  // % moyenne
  const colorUser = colors[key];

  out[`${key}_GRAPH_IMG`] = compareUrl(...);     // graphe comparatif
  out[`${key}_PROGRESS_IMG`] = progressUrl(...); // progress bar
}
----------------------------------------------------------------------




5) Graphe radar global

--------------------------------------------------------------
const radarLabels = [
  "Comp√©tences num√©riques de base",
  "Communication & collaboration en ligne",
  "S√©curit√© num√©rique & protection des donn√©es",
  "Culture num√©rique & usages avanc√©s"
];
const radarValues = radarLabels.map((_, i) =>
  Number(String(report[`S${i+1}_PCT`] || "0").replace("%",""))
);
out["GLOBAL_RADAR_IMG"] = radarUrl(radarLabels, radarValues);
--------------------------------------------------------------


Exemple de sortie

#######################################################
{
  "S1_GRAPH_IMG": "https://quickchart.io/chart?...",
  "S1_PROGRESS_IMG": "https://quickchart.io/chart?...",
  "S2_GRAPH_IMG": "https://quickchart.io/chart?...",
  "S2_PROGRESS_IMG": "https://quickchart.io/chart?...",
  "S3_GRAPH_IMG": "https://quickchart.io/chart?...",
  "S3_PROGRESS_IMG": "https://quickchart.io/chart?...",
  "S4_GRAPH_IMG": "https://quickchart.io/chart?...",
  "S4_PROGRESS_IMG": "https://quickchart.io/chart?...",
  "GLOBAL_RADAR_IMG": "https://quickchart.io/chart?..."

                    ## Exemple (Not Use) ##
}
########################################################




Fonctionnement dans le workflow

 1- Merge Placeholders ‚Üí fournit donn√©es individuelles + moyennes.

 2- Graph URL create ‚Üí g√©n√®re tous les liens QuickChart (images pr√™tes √† int√©grer).

 3- Copy File Slide Model ‚Üí ins√®re ces images dans les slides (placeholders d‚Äôimages).





Points cl√©s

 . ‚úÖ Les graphiques sont g√©n√©r√©s √† la vol√©e via QuickChart.

 . ‚úÖ Comparaison claire entre r√©sultats individuels et moyennes.

 . ‚úÖ Donne √† la fois une vision globale (radar) et d√©taill√©e (par sous-th√®me).

 . ‚ö†Ô∏è Les URLs QuickChart peuvent devenir longues ‚Üí penser √† un √©ventuel raccourcissement si n√©cessaire.