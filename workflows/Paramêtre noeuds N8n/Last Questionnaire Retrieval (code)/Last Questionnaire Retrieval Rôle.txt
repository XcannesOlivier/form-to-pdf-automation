üü† Last Questionnaire Retrieval
R√¥le


Ce n≈ìud est un n≈ìud Code (JavaScript) ex√©cut√© en mode Run Once for All Items.

Il a pour but de :

 1- S√©lectionner uniquement la derni√®re r√©ponse dans la feuille Google Sheets, en se basant sur la colonne Horodateur.

 2- Nettoyer et transformer les r√©ponses pour ne garder que les champs utiles.

 3- Convertir les r√©ponses multi-choix en tableaux (__arr) pour faciliter le traitement dans les √©tapes suivantes.


Fonctionnement du script

1) Parser la date au format fran√ßais

------------------------------------------------------------------------------------
function parseFRDatetime(s) {
  if (!s) return 0;
  const m = String(s).match(/(\d{2})\/(\d{2})\/(\d{4})\s+(\d{2}):(\d{2}):(\d{2})/);
  if (!m) return 0;
  const [ , dd, MM, yyyy, HH, mm, ss ] = m.map(Number);
  return new Date(yyyy, MM - 1, dd, HH, mm, ss).getTime();
}
------------------------------------------------------------------------------------

 . Transforme une date type 14/09/2025 00:36:15 en timestamp exploitable.

 . Si la date est invalide ‚Üí retourne 0.




2) Trier les r√©ponses et garder la plus r√©cente

--------------------------------------------------------------------------------------------
const all = $items();
if (!all.length) return [];

all.sort((a, b) => parseFRDatetime(a.json.Horodateur) - parseFRDatetime(b.json.Horodateur));
const last = all[all.length - 1].json;
--------------------------------------------------------------------------------------------

 . R√©cup√®re toutes les r√©ponses envoy√©es par le Google Sheets Trigger.

 . Trie par Horodateur croissant.

 . S√©lectionne la derni√®re r√©ponse.




3) Construire la sortie (objets nettoy√©s)

-------------------------------------------------
const SEP = ", ";
const out = {
  Horodateur: last["Horodateur"],
  "Adresse e-mail": last["Adresse e-mail"] || ""
};
-------------------------------------------------

 . Garde l‚ÄôHorodateur et l‚Äôadresse e-mail comme m√©tadonn√©es principales.

 . Initialise un objet out qui contiendra les r√©ponses nettoy√©es.




4) Traitement des r√©ponses multi-choix

---------------------------------------------------------------------------
for (const [key, val] of Object.entries(last)) {
  if (key === "Horodateur" || key === "Adresse e-mail") continue;

  if (typeof val === "string" && val.includes(SEP)) {
    out[`${key}__arr`] = val.split(SEP).map(s => s.trim()).filter(Boolean);
  }
}
----------------------------------------------------------------------------

 . Ignore Horodateur et Adresse e-mail (d√©j√† trait√©s).

 . Si une r√©ponse contient , ‚Üí consid√©r√©e comme multi-choix.

 . Convertie en tableau sous la forme :

## Exemple (not use) : Question__arr: ["R√©ponse 1", "R√©ponse 2", ...] ##




5) Retour du r√©sultat

-----------------------
return [{ json: out }];
-----------------------

 . Retourne un seul objet (la derni√®re r√©ponse nettoy√©e) au format JSON.

 . Exemple de sortie simplifi√©e :

###########################################################################################
{
  "Horodateur": "14/09/2025 00:36:15",         ## Exemple (not use) ##
  "Adresse e-mail": "exemple@mail.com",
  "Que signifie naviguer sur Internet ?__arr": ["Utiliser un navigateur (Chrome, Firefox)"]
}
###########################################################################################



Points cl√©s

 . ‚úÖ Assure que le workflow ne traite qu‚Äôune seule r√©ponse √† la fois (la plus r√©cente).

 . ‚úÖ Simplifie les champs multi-choix pour faciliter l‚Äô√©valuation.

 . ‚ö†Ô∏è Important : la colonne Horodateur doit toujours √™tre pr√©sente et bien format√©e (jj/mm/aaaa hh:mm:ss).